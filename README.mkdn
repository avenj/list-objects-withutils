# NAME

List::Objects::WithUtils - Object interfaces to lists, with utils

# SYNOPSIS

    use List::Objects::WithUtils;

    my $array = array(qw/ a b c/);
    my $hash  = hash( foo => $bar, snacks => $cake );

See:

[List::Objects::WithUtils::Role::Array](http://search.cpan.org/perldoc?List::Objects::WithUtils::Role::Array)

[List::Objects::WithUtils::Role::Hash](http://search.cpan.org/perldoc?List::Objects::WithUtils::Role::Hash)

# DESCRIPTION

A small set of roles and classes defining an object-oriented interface to Perl
hashes and arrays. Derived from [Data::Perl](http://search.cpan.org/perldoc?Data::Perl).

The most commonly used functions from [List::Util](http://search.cpan.org/perldoc?List::Util), [List::MoreUtils](http://search.cpan.org/perldoc?List::MoreUtils), and
[List::UtilsBy](http://search.cpan.org/perldoc?List::UtilsBy) are conveniently provided as (frequently chainable) methods.

For details on arrays, see [List::Objects::WithUtils::Array](http://search.cpan.org/perldoc?List::Objects::WithUtils::Array) and
[List::Objects::WithUtils::Role::Array](http://search.cpan.org/perldoc?List::Objects::WithUtils::Role::Array).

For details on hashes, see [List::Objects::WithUtils::Hash](http://search.cpan.org/perldoc?List::Objects::WithUtils::Hash) and
[List::Objects::WithUtils::Role::Hash](http://search.cpan.org/perldoc?List::Objects::WithUtils::Role::Hash).

__Why another object-oriented list module?__

There are a fair few object-oriented approaches to lists on CPAN, none of
which were quite what I needed. [Data::Perl](http://search.cpan.org/perldoc?Data::Perl) comes the closest -- but is
primarily targetting [MooX::HandlesVia](http://search.cpan.org/perldoc?MooX::HandlesVia) and cannot guarantee a reasonably
stable API (and I don't need the other data types).

This module aims to provide a consistent, natural interface to hashes and
arrays exclusively, with convenient access to common tools.

# AUTHOR

Jon Portnoy <avenj@cobaltirc.org>

Significant portions of this code are derived from [Data::Perl](http://search.cpan.org/perldoc?Data::Perl) 
by Matthew Phillips (CPAN: MATTP) et al

Licensed under the same terms as Perl.
